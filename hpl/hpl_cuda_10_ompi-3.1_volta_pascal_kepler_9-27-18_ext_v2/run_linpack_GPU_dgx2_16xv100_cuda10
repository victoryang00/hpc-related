#!/bin/bash
#location of HPL 
HPL_DIR=`pwd`

CPU_CORES_PER_RANK=2
#CPU_CORES_PER_RANK=5
RANK_PER_NODE=8

#cho "CPU_CORES_PER_RANK= $CPU_CORES_PER_RANK"

export OMP_NUM_THREADS=$CPU_CORES_PER_RANK
export MKL_NUM_THREADS=$CPU_CORES_PER_RANK
export LD_LIBRARY_PATH=$HPL_DIR:$LD_LIBRARY_PATH

export MONITOR_GPU=1
export GPU_TEMP_WARNING=70
export GPU_CLOCK_WARNING=1380
export GPU_POWER_WARNING=350
export GPU_PCIE_GEN_WARNING=3
export GPU_PCIE_WIDTH_WARNING=16

#export CUDA_DEVICE_MAX_CONNECTIONS=16
#export TRSM_CUTOFF=16000
export TRSM_CUTOFF=1000000
#export GPU_DGEMM_SPLIT=1.00
export GPU_DGEMM_SPLIT=1.0
#export RANK_PERF=1100.0
#export CHECK_CPU_DGEMM_PERF=0
#export CPU_DGEMM_PERF_WARNING=1000.0

#export TEST_SYSTEM_PARAMS=0
#export TEST_LOOPS=10


#APP=$HPL_DIR/xhpl_cuda-10.0-dyn_mkl-dyn_ompi-1.10.7_gcc4.8.5_9-27-18
#APP=$HPL_DIR/xhpl_cuda-10.0-dyn_mkl-dyn_ompi-3.1.0_gcc4.8.5_9-26-18
#APP=$HPL_DIR/xhpl_cuda-10.0-dyn_mkl-static_ompi-1.10.7_gcc4.8.5_9-27-18
APP=$HPL_DIR/xhpl_cuda-10.0-dyn_mkl-static_ompi-3.1.0_gcc4.8.5_9-26-18

me=`hostname`
#echo "xhpl binary= $APP"

lrank=$OMPI_COMM_WORLD_LOCAL_RANK

case ${lrank} in
0)
#ldd $APP
#echo "host=$me rank= $OMPI_COMM_WORLD_RANK lrank = $lrank cores=$CPU_CORES_PER_RANK bin=$APP"

  #set GPU and CPU affinity of local rank 
#  export CUDA_VISIBLE_DEVICES=0; numactl --cpunodebind=0  $APP
IB=1
GPU=0
CPUNODE=0

echo "host=$me rank= $OMPI_COMM_WORLD_RANK lrank = $lrank cores=$CPU_CORES_PER_RANK GPU=${GPU} IB=mlx5_${IB} CPUNODE=${CPUNODE} bin=$APP"

  ;;
1)
#echo "host=$me rank= $OMPI_COMM_WORLD_RANK lrank = $lrank cores=$CPU_CORES_PER_RANK bin=$APP"

  #set GPU and CPU affinity of local rank
#  export CUDA_VISIBLE_DEVICES=1; numactl --cpunodebind=0  $APP

IB=1
GPU=1
CPUNODE=0

echo "host=$me rank= $OMPI_COMM_WORLD_RANK lrank = $lrank cores=$CPU_CORES_PER_RANK GPU=${GPU} IB=mlx5_${IB} CPUNODE=${CPUNODE} bin=$APP"

  ;;
2)
#echo "host=$me rank= $OMPI_COMM_WORLD_RANK lrank = $lrank cores=$CPU_CORES_PER_RANK bin=$APP"

  #set GPU and CPU affinity of local rank
#  export CUDA_VISIBLE_DEVICES=2; numactl --cpunodebind=0  $APP

IB=1
GPU=2
CPUNODE=0

echo "host=$me rank= $OMPI_COMM_WORLD_RANK lrank = $lrank cores=$CPU_CORES_PER_RANK GPU=${GPU} IB=mlx5_${IB} CPUNODE=${CPUNODE} bin=$APP"


  ;;
3)
#echo "host=$me rank= $OMPI_COMM_WORLD_RANK lrank = $lrank cores=$CPU_CORES_PER_RANK bin=$APP"

  #set GPU and CPU affinity of local rank
#  export CUDA_VISIBLE_DEVICES=3; numactl --cpunodebind=0  $APP

IB=1
GPU=3
CPUNODE=0

echo "host=$me rank= $OMPI_COMM_WORLD_RANK lrank = $lrank cores=$CPU_CORES_PER_RANK GPU=${GPU} IB=mlx5_${IB} CPUNODE=${CPUNODE} bin=$APP"


  ;;
4)
#echo "host=$me rank= $OMPI_COMM_WORLD_RANK lrank = $lrank cores=$CPU_CORES_PER_RANK bin=$APP"

  #set GPU and CPU affinity of local rank
#  export CUDA_VISIBLE_DEVICES=4; numactl --cpunodebind=0  $APP


IB=1
GPU=4
CPUNODE=0

echo "host=$me rank= $OMPI_COMM_WORLD_RANK lrank = $lrank cores=$CPU_CORES_PER_RANK GPU=${GPU} IB=mlx5_${IB} CPUNODE=${CPUNODE} bin=$APP"


  ;;
5)
#echo "host=$me rank= $OMPI_COMM_WORLD_RANK lrank = $lrank cores=$CPU_CORES_PER_RANK bin=$APP"

  #set GPU and CPU affinity of local rank
#  export CUDA_VISIBLE_DEVICES=5; numactl --cpunodebind=0  $APP

IB=1
GPU=5
CPUNODE=0

echo "host=$me rank= $OMPI_COMM_WORLD_RANK lrank = $lrank cores=$CPU_CORES_PER_RANK GPU=${GPU} IB=mlx5_${IB} CPUNODE=${CPUNODE} bin=$APP"



  ;;
6)
#echo "host=$me rank= $OMPI_COMM_WORLD_RANK lrank = $lrank cores=$CPU_CORES_PER_RANK bin=$APP"

  #set GPU and CPU affinity of local rank
#  export CUDA_VISIBLE_DEVICES=6; numactl --cpunodebind=0  $APP
IB=1
GPU=6
CPUNODE=0

echo "host=$me rank= $OMPI_COMM_WORLD_RANK lrank = $lrank cores=$CPU_CORES_PER_RANK GPU=${GPU} IB=mlx5_${IB} CPUNODE=${CPUNODE} bin=$APP"




  ;;
7)
#echo "host=$me rank= $OMPI_COMM_WORLD_RANK lrank = $lrank cores=$CPU_CORES_PER_RANK bin=$APP"

  #set GPU and CPU affinity of local rank
#  export CUDA_VISIBLE_DEVICES=7; numactl --cpunodebind=0  $APP

IB=1
GPU=7
CPUNODE=0

echo "host=$me rank= $OMPI_COMM_WORLD_RANK lrank = $lrank cores=$CPU_CORES_PER_RANK GPU=${GPU} IB=mlx5_${IB} CPUNODE=${CPUNODE} bin=$APP"



  ;;
8)
#ldd $APP
#echo "host=$me rank= $OMPI_COMM_WORLD_RANK lrank = $lrank cores=$CPU_CORES_PER_RANK bin=$APP"

  #set GPU and CPU affinity of local rank
#  export CUDA_VISIBLE_DEVICES=8; numactl --cpunodebind=1  $APP

IB=1
GPU=8
CPUNODE=1

echo "host=$me rank= $OMPI_COMM_WORLD_RANK lrank = $lrank cores=$CPU_CORES_PER_RANK GPU=${GPU} IB=mlx5_${IB} CPUNODE=${CPUNODE} bin=$APP"



  ;;
9)
#echo "host=$me rank= $OMPI_COMM_WORLD_RANK lrank = $lrank cores=$CPU_CORES_PER_RANK bin=$APP"

  #set GPU and CPU affinity of local rank
#  export CUDA_VISIBLE_DEVICES=9; numactl --cpunodebind=1  $APP

IB=1
GPU=9
CPUNODE=1

echo "host=$me rank= $OMPI_COMM_WORLD_RANK lrank = $lrank cores=$CPU_CORES_PER_RANK GPU=${GPU} IB=mlx5_${IB} CPUNODE=${CPUNODE} bin=$APP"



  ;;
10)
#echo "host=$me rank= $OMPI_COMM_WORLD_RANK lrank = $lrank cores=$CPU_CORES_PER_RANK bin=$APP"

  #set GPU and CPU affinity of local rank
#  export CUDA_VISIBLE_DEVICES=10; numactl --cpunodebind=1  $APP

IB=1
GPU=10
CPUNODE=1

echo "host=$me rank= $OMPI_COMM_WORLD_RANK lrank = $lrank cores=$CPU_CORES_PER_RANK GPU=${GPU} IB=mlx5_${IB} CPUNODE=${CPUNODE} bin=$APP"



  ;;
11)
#echo "host=$me rank= $OMPI_COMM_WORLD_RANK lrank = $lrank cores=$CPU_CORES_PER_RANK bin=$APP"

  #set GPU and CPU affinity of local rank
#  export CUDA_VISIBLE_DEVICES=11; numactl --cpunodebind=1  $APP

IB=1
GPU=11
CPUNODE=1

echo "host=$me rank= $OMPI_COMM_WORLD_RANK lrank = $lrank cores=$CPU_CORES_PER_RANK GPU=${GPU} IB=mlx5_${IB} CPUNODE=${CPUNODE} bin=$APP"



  ;;
12)
#echo "host=$me rank= $OMPI_COMM_WORLD_RANK lrank = $lrank cores=$CPU_CORES_PER_RANK bin=$APP"

  #set GPU and CPU affinity of local rank
#  export CUDA_VISIBLE_DEVICES=12; numactl --cpunodebind=1  $APP

IB=1
GPU=12
CPUNODE=1

echo "host=$me rank= $OMPI_COMM_WORLD_RANK lrank = $lrank cores=$CPU_CORES_PER_RANK GPU=${GPU} IB=mlx5_${IB} CPUNODE=${CPUNODE} bin=$APP"



  ;;
13)
#echo "host=$me rank= $OMPI_COMM_WORLD_RANK lrank = $lrank cores=$CPU_CORES_PER_RANK bin=$APP"

  #set GPU and CPU affinity of local rank
#  export CUDA_VISIBLE_DEVICES=13; numactl --cpunodebind=1  $APP

IB=1
GPU=13
CPUNODE=1

echo "host=$me rank= $OMPI_COMM_WORLD_RANK lrank = $lrank cores=$CPU_CORES_PER_RANK GPU=${GPU} IB=mlx5_${IB} CPUNODE=${CPUNODE} bin=$APP"



  ;;
14)
#echo "host=$me rank= $OMPI_COMM_WORLD_RANK lrank = $lrank cores=$CPU_CORES_PER_RANK bin=$APP"

  #set GPU and CPU affinity of local rank
#  export CUDA_VISIBLE_DEVICES=14; numactl --cpunodebind=1  $APP

IB=1
GPU=14
CPUNODE=1

echo "host=$me rank= $OMPI_COMM_WORLD_RANK lrank = $lrank cores=$CPU_CORES_PER_RANK GPU=${GPU} IB=mlx5_${IB} CPUNODE=${CPUNODE} bin=$APP"



  ;;
15)
#echo "host=$me rank= $OMPI_COMM_WORLD_RANK lrank = $lrank cores=$CPU_CORES_PER_RANK bin=$APP"

  #set GPU and CPU affinity of local rank
#  export CUDA_VISIBLE_DEVICES=15; numactl --cpunodebind=1  $APP

IB=1
GPU=15
CPUNODE=1

echo "host=$me rank= $OMPI_COMM_WORLD_RANK lrank = $lrank cores=$CPU_CORES_PER_RANK GPU=${GPU} IB=mlx5_${IB} CPUNODE=${CPUNODE} bin=$APP"



  ;;

esac


#export OMPI_MCA_btl_openib_if_include=mlx5_${IB} ;export CUDA_VISIBLE_DEVICES=${GPU}; numactl --cpunodebind=${CPUNODE}  $APP

export CUDA_VISIBLE_DEVICES=${GPU}; numactl --cpunodebind=${CPUNODE}  $APP

